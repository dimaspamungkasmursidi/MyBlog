---
import type { HTMLTag, Polymorphic } from 'astro/types'
import type { CollectionEntry } from 'astro:content'

import FormattedDate from '../FormattedDate.astro'

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<'post'>
	withDesc?: boolean
}

const { as: Tag = 'div', post, withDesc = false } = Astro.props
const postDate = post.data.updatedDate ?? post.data.publishDate
---

<li class='flex flex-col border-b pb-1 sm:flex-row sm:gap-x-4 [&_q]:basis-full hover:after:bg-gradient-to-r hover:after:from-[#f57111] hover:after:to-[#f79605]'>
	<FormattedDate class='min-w-[120px]' date={postDate} />

	<Tag>
		{post.data.draft && <span class='text-red-500'>(Draft) </span>}
		<a
			data-astro-prefetch
			href={`/blog/${post.slug}/`}
			class='transition-all hover:text-muted-foreground'
		>
			{post.data.title}
		</a>
		{
			withDesc && (
				<p class='line-clamp-3 block text-sm italic text-muted-foreground'>
					{post.data.description}
				</p>
			)
		}
	</Tag>
</li>
